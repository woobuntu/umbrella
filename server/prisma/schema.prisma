generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Account {
  id               Int              @id @default(1)
  bank             String           @db.VarChar(10)
  number           String           @db.VarChar(30)
  holder           String           @db.VarChar(20)
  accountHistories AccountHistory[]
}

model AccountHistory {
  id        Int       @id @default(autoincrement())
  bank      String    @db.VarChar(10)
  number    String    @db.VarChar(30)
  holder    String    @db.VarChar(20)
  accountId Int       @default(1)
  from      DateTime  @default(now()) @db.Timestamp(0)
  to        DateTime? @db.Timestamp(0)
  account   Account   @relation(fields: [accountId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "accounthistory_ibfk_1")

  @@index([accountId], map: "accountId")
}

model Basket {
  id                      Int                   @id @default(autoincrement())
  userId                  String                @db.VarChar(255)
  productOptionRelationId Int
  quantity                Int
  productOptionRelation   ProductOptionRelation @relation(fields: [productOptionRelationId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "basket_ibfk_2")
  user                    User                  @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "basket_ibfk_1")

  @@index([productOptionRelationId], map: "productOptionRelationId")
  @@index([userId], map: "userId")
}

model Career {
  id              Int             @id @default(autoincrement())
  classification  String          @db.VarChar(10)
  record          String          @db.VarChar(30)
  executiveId     Int
  executive       Executive       @relation(fields: [executiveId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "career_ibfk_1")
  careerHistories CareerHistory[]

  @@index([executiveId], map: "executiveId")
}

model CareerHistory {
  id             Int       @id @default(autoincrement())
  classification String    @db.VarChar(10)
  record         String    @db.VarChar(30)
  executiveId    Int
  careerId       Int?
  from           DateTime  @default(now()) @db.Timestamp(0)
  to             DateTime? @db.Timestamp(0)
  career         Career?   @relation(fields: [careerId], references: [id], onUpdate: NoAction, map: "careerhistory_ibfk_1")

  @@index([careerId], map: "careerId")
}

model Contact {
  id               Int              @id @default(1)
  address          String           @db.VarChar(50)
  mail             String           @db.VarChar(30)
  phone            String           @db.VarChar(20)
  contactHistories ContactHistory[]
}

model ContactHistory {
  id        Int       @id @default(autoincrement())
  address   String    @db.VarChar(50)
  mail      String    @db.VarChar(30)
  phone     String    @db.VarChar(20)
  contactId Int       @default(1)
  from      DateTime  @default(now()) @db.Timestamp(0)
  to        DateTime? @db.Timestamp(0)
  contact   Contact   @relation(fields: [contactId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "contacthistory_ibfk_1")

  @@index([contactId], map: "contactId")
}

model Executive {
  id                     Int                     @id @default(autoincrement())
  name                   String                  @db.VarChar(5)
  position               String                  @db.VarChar(30)
  greeting               String?                 @db.Text
  careers                Career[]
  executiveFileRelations ExecutiveFileRelation[]
  executiveHistories     ExecutiveHistory[]
}

model ExecutiveFileRelation {
  id          Int       @id @default(autoincrement())
  executiveId Int
  fileId      Int
  executive   Executive @relation(fields: [executiveId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "executivefilerelation_ibfk_1")
  file        File      @relation(fields: [fileId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "executivefilerelation_ibfk_2")

  @@index([executiveId], map: "executiveId")
  @@index([fileId], map: "fileId")
}

model ExecutiveHistory {
  id          Int        @id @default(autoincrement())
  name        String     @db.VarChar(5)
  position    String     @db.VarChar(30)
  greeting    String?    @db.Text
  executiveId Int?
  from        DateTime   @default(now()) @db.Timestamp(0)
  to          DateTime?  @db.Timestamp(0)
  executive   Executive? @relation(fields: [executiveId], references: [id], onUpdate: NoAction, map: "executivehistory_ibfk_1")

  @@index([executiveId], map: "executiveId")
}

model File {
  id                       Int                       @id @default(autoincrement())
  name                     String                    @db.VarChar(50)
  path                     String                    @db.Text
  type                     String                    @db.VarChar(20)
  executiveFileRelations   ExecutiveFileRelation[]
  fileHistories            FileHistory[]
  metaFileRelations        MetaFileRelation[]
  performanceFileRelations PerformanceFileRelation[]
  productFileRelations     ProductFileRelation[]
}

model FileHistory {
  id     Int       @id @default(autoincrement())
  name   String    @db.VarChar(50)
  path   String    @db.Text
  type   String    @db.VarChar(20)
  fileId Int?
  from   DateTime  @default(now()) @db.Timestamp(0)
  to     DateTime? @db.Timestamp(0)
  file   File?     @relation(fields: [fileId], references: [id], onUpdate: NoAction, map: "filehistory_ibfk_1")

  @@index([fileId], map: "fileId")
}

model Gnb {
  id           Int          @id @default(autoincrement())
  name         String       @db.VarChar(10)
  gnbHistories GnbHistory[]
  lnbs         Lnb[]
}

model GnbHistory {
  id    Int       @id @default(autoincrement())
  name  String    @db.VarChar(10)
  gnbId Int?
  from  DateTime  @default(now()) @db.Timestamp(0)
  to    DateTime? @db.Timestamp(0)
  gnb   Gnb?      @relation(fields: [gnbId], references: [id], onUpdate: NoAction, map: "gnbhistory_ibfk_1")

  @@index([gnbId], map: "gnbId")
}

model History {
  id               Int              @id @default(autoincrement())
  date             String           @db.VarChar(30)
  event            String           @db.VarChar(50)
  historyHistories HistoryHistory[]
}

model HistoryHistory {
  id        Int       @id @default(autoincrement())
  date      String    @db.VarChar(30)
  event     String    @db.VarChar(50)
  historyId Int?
  from      DateTime  @default(now()) @db.Timestamp(0)
  to        DateTime? @db.Timestamp(0)
  history   History?  @relation(fields: [historyId], references: [id], onUpdate: NoAction, map: "historyhistory_ibfk_1")

  @@index([historyId], map: "historyId")
}

model Lnb {
  id           Int          @id @default(autoincrement())
  name         String       @db.VarChar(10)
  path         String       @db.VarChar(50)
  gnbId        Int
  gnb          Gnb          @relation(fields: [gnbId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "lnb_ibfk_1")
  lnbHistories LnbHistory[]

  @@index([gnbId], map: "gnbId")
}

model LnbHistory {
  id    Int       @id @default(autoincrement())
  name  String    @db.VarChar(10)
  path  String    @db.VarChar(50)
  lnbId Int?
  from  DateTime  @default(now()) @db.Timestamp(0)
  to    DateTime? @db.Timestamp(0)
  lnb   Lnb?      @relation(fields: [lnbId], references: [id], onUpdate: NoAction, map: "lnbhistory_ibfk_1")

  @@index([lnbId], map: "lnbId")
}

model Meta {
  id                Int                @id @default(1)
  name              String             @db.VarChar(10)
  type              String             @db.VarChar(10)
  metaFileRelations MetaFileRelation[]
  metaHistories     MetaHistory[]
}

model MetaFileRelation {
  id     Int    @id @default(autoincrement())
  metaId Int    @default(1)
  fileId Int
  type   String @db.VarChar(10)
  file   File   @relation(fields: [fileId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "metafilerelation_ibfk_2")
  meta   Meta   @relation(fields: [metaId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "metafilerelation_ibfk_1")

  @@index([fileId], map: "fileId")
  @@index([metaId], map: "metaId")
}

model MetaHistory {
  id     Int       @id @default(autoincrement())
  name   String    @db.VarChar(10)
  type   String    @db.VarChar(10)
  metaId Int
  from   DateTime  @default(now()) @db.Timestamp(0)
  to     DateTime? @db.Timestamp(0)
  meta   Meta      @relation(fields: [metaId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "metahistory_ibfk_1")

  @@index([metaId], map: "metaId")
}

model Notification {
  id                    Int                   @id @default(autoincrement())
  title                 String                @db.VarChar(50)
  content               String                @db.Text
  timestamp             DateTime              @default(now()) @db.Timestamp(0)
  notificationHistories NotificationHistory[]
}

model NotificationHistory {
  id             Int           @id @default(autoincrement())
  title          String        @db.VarChar(50)
  content        String        @db.Text
  timestamp      String        @db.VarChar(50)
  notificationId Int?
  from           DateTime      @default(now()) @db.Timestamp(0)
  to             DateTime?     @db.Timestamp(0)
  notification   Notification? @relation(fields: [notificationId], references: [id], onUpdate: NoAction, map: "notificationhistory_ibfk_1")

  @@index([notificationId], map: "notificationId")
}

model Option {
  id                     Int                     @id @default(autoincrement())
  name                   String                  @db.VarChar(30)
  price                  Int                     @default(0)
  optionHistories        OptionHistory[]
  productOptionRelations ProductOptionRelation[]
}

model OptionHistory {
  id       Int       @id @default(autoincrement())
  name     String    @db.VarChar(30)
  price    Int       @default(0)
  optionId Int?
  from     DateTime  @default(now()) @db.Timestamp(0)
  to       DateTime? @db.Timestamp(0)
  option   Option?   @relation(fields: [optionId], references: [id], onUpdate: NoAction, map: "optionhistory_ibfk_1")

  @@index([optionId], map: "optionId")
}

model Performance {
  id                       Int                       @id @default(autoincrement())
  title                    String                    @db.VarChar(50)
  content                  String?                   @db.Text
  timestamp                DateTime                  @default(now()) @db.Timestamp(0)
  performanceFileRelations PerformanceFileRelation[]
  performanceHistories     PerformanceHistory[]
}

model PerformanceFileRelation {
  id            Int         @id @default(autoincrement())
  performanceId Int
  fileId        Int
  file          File        @relation(fields: [fileId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "performancefilerelation_ibfk_2")
  performance   Performance @relation(fields: [performanceId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "performancefilerelation_ibfk_1")

  @@index([fileId], map: "fileId")
  @@index([performanceId], map: "performanceId")
}

model PerformanceHistory {
  id            Int          @id @default(autoincrement())
  title         String       @db.VarChar(50)
  content       String?      @db.Text
  timestamp     DateTime     @db.Timestamp(0)
  performanceId Int?
  from          DateTime     @default(now()) @db.Timestamp(0)
  to            DateTime?    @db.Timestamp(0)
  performance   Performance? @relation(fields: [performanceId], references: [id], onUpdate: NoAction, map: "performancehistory_ibfk_1")

  @@index([performanceId], map: "performanceId")
}

model User {
  id                String           @id @db.VarChar(255)
  email             String?          @db.VarChar(255)
  name              String?          @db.VarChar(10)
  phone             String?          @default("010--") @db.VarChar(255)
  accessToken       String?          @db.VarChar(255)
  refreshToken      String?          @db.VarChar(255)
  baskets           Basket[]
  defaultDeliveries DefaultDelivery?
  payments          Payment[]
  userHistories     UserHistory[]
}

model UserHistory {
  id           Int       @id @default(autoincrement())
  email        String?   @db.VarChar(255)
  name         String?   @db.VarChar(10)
  phone        String?   @db.VarChar(255)
  accessToken  String?   @db.VarChar(255)
  refreshToken String?   @db.VarChar(255)
  userId       String?   @db.VarChar(255)
  from         DateTime  @default(now()) @db.Timestamp(0)
  to           DateTime? @db.Timestamp(0)
  user         User?     @relation(fields: [userId], references: [id], onUpdate: NoAction, map: "userhistory_ibfk_1")

  @@index([userId], map: "userId")
}

model DefaultDelivery {
  id                       Int                      @id @default(autoincrement())
  name                     String                   @db.VarChar(255)
  phone                    String                   @default("010--") @db.VarChar(255)
  postCode                 String                   @db.VarChar(255)
  address                  String                   @db.VarChar(255)
  detailAddress            String                   @db.VarChar(255)
  memo                     String?                  @db.VarChar(255)
  userId                   String                   @unique(map: "userId") @db.VarChar(255)
  user                     User                     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "defaultdelivery_ibfk_1")
  defaultDeliveryHistories DefaultDeliveryHistory[]
}

model DefaultDeliveryHistory {
  id                Int              @id @default(autoincrement())
  name              String           @db.VarChar(255)
  phone             String           @default("010--") @db.VarChar(255)
  postCode          String           @db.VarChar(255)
  address           String           @db.VarChar(255)
  detailAddress     String           @db.VarChar(255)
  memo              String?          @db.VarChar(255)
  userId            String           @db.VarChar(255)
  defaultDeliveryId Int?
  from              DateTime         @default(now()) @db.Timestamp(0)
  to                DateTime?        @db.Timestamp(0)
  defaultDelivery   DefaultDelivery? @relation(fields: [defaultDeliveryId], references: [id], onUpdate: NoAction, map: "defaultdeliveryhistory_ibfk_1")

  @@index([defaultDeliveryId], map: "defaultDeliveryId")
}

model Payment {
  id               Int              @id @default(autoincrement())
  platform         String           @db.VarChar(20)
  type             String           @db.VarChar(30)
  amount           Int
  deliveryFee      Int              @default(0)
  orderStatus      String           @default("결제완료") @db.VarChar(30)
  tid              String?          @db.VarChar(255)
  orderId          String?          @db.VarChar(255)
  paymentKey       String?          @db.VarChar(255)
  userId           String           @db.VarChar(255)
  user             User             @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "payment_ibfk_1")
  delivery         Delivery?
  orderer          Orderer?
  paymentHistories PaymentHistory[]
  purchases        Purchase[]

  @@index([userId], map: "userId")
}

model PaymentHistory {
  id          Int       @id @default(autoincrement())
  platform    String    @db.VarChar(20)
  type        String    @db.VarChar(30)
  amount      Int
  deliveryFee Int
  orderStatus String?   @db.VarChar(30)
  tid         String?   @db.VarChar(255)
  orderId     String?   @db.VarChar(255)
  paymentKey  String?   @db.VarChar(255)
  userId      String    @db.VarChar(255)
  paymentId   Int?
  from        DateTime  @default(now()) @db.Timestamp(0)
  to          DateTime? @db.Timestamp(0)
  payment     Payment?  @relation(fields: [paymentId], references: [id], onUpdate: NoAction, map: "paymenthistory_ibfk_1")

  @@index([paymentId], map: "paymentId")
}

model Delivery {
  paymentId     Int     @id
  name          String  @db.VarChar(255)
  phone         String  @default("010--") @db.VarChar(255)
  postCode      String  @db.VarChar(255)
  address       String  @db.VarChar(255)
  detailAddress String  @db.VarChar(255)
  memo          String? @db.VarChar(255)
  payment       Payment @relation(fields: [paymentId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "delivery_ibfk_1")
}

model Orderer {
  paymentId Int     @id
  name      String  @db.VarChar(255)
  phone     String  @db.VarChar(255)
  email     String  @db.VarChar(255)
  payment   Payment @relation(fields: [paymentId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "orderer_ibfk_1")
}

model Purchase {
  id                      Int                    @id @default(autoincrement())
  productOptionRelationId Int?
  paymentId               Int
  quantity                Int
  payment                 Payment                @relation(fields: [paymentId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "purchase_ibfk_2")
  productOptionRelation   ProductOptionRelation? @relation(fields: [productOptionRelationId], references: [id], onUpdate: NoAction, map: "purchase_ibfk_1")

  @@index([paymentId], map: "paymentId")
  @@index([productOptionRelationId], map: "productOptionRelationId")
}

model Product {
  id                     Int                     @id @default(autoincrement())
  name                   String                  @db.VarChar(30)
  price                  Int
  expirationDate         String?                 @db.VarChar(255)
  storageMethod          String?                 @db.VarChar(255)
  ingredients            String?                 @db.VarChar(255)
  productFileRelations   ProductFileRelation[]
  productHistories       ProductHistory[]
  productOptionRelations ProductOptionRelation[]
}

model ProductFileRelation {
  id        Int     @id @default(autoincrement())
  productId Int
  fileId    Int
  File      File    @relation(fields: [fileId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "productfilerelation_ibfk_2")
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "productfilerelation_ibfk_1")

  @@index([fileId], map: "fileId")
  @@index([productId], map: "productId")
}

model ProductHistory {
  id             Int       @id @default(autoincrement())
  name           String    @db.VarChar(30)
  price          Int
  expirationDate String?   @db.VarChar(255)
  storageMethod  String?   @db.VarChar(255)
  ingredients    String?   @db.VarChar(255)
  productId      Int?
  from           DateTime  @default(now()) @db.Timestamp(0)
  to             DateTime? @db.Timestamp(0)
  product        Product?  @relation(fields: [productId], references: [id], onUpdate: NoAction, map: "producthistory_ibfk_1")

  @@index([productId], map: "productId")
}

model ProductOptionRelation {
  id        Int        @id @default(autoincrement())
  productId Int
  optionId  Int
  option    Option     @relation(fields: [optionId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "productoptionrelation_ibfk_2")
  product   Product    @relation(fields: [productId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "productoptionrelation_ibfk_1")
  baskets   Basket[]
  purchases Purchase[]

  @@index([optionId], map: "optionId")
  @@index([productId], map: "productId")
}
